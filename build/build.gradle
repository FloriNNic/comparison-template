def generatedDocFilePath = "."
def scriptToRun = ""

task initScript() {
    doFirst {
        if (!new File("${projectDir}/extracted/oxygen/").exists()) {
            ant.get(src: 'https://www.oxygenxml.com/InstData/Editor/All/oxygen.tar.gz', dest: "${projectDir}/oxygen.tar.gz", skipexisting: 'true')
            ant.untar(src: "${projectDir}/oxygen.tar.gz", dest: "${projectDir}/extracted", compression: 'gzip')

            String key = System.getenv('SCRIPTING_LICENSE_KEY')
            if (key == null) {
                throw new TaskExecutionException(it, new Exception("You need a valid Oxygen Scripting license key."))
            } else {
                new File("${projectDir}/extracted/oxygen/scriptinglicensekey.txt").write(key.replaceAll("  ", "\n"))
            }
        }
    }
}

task generateDoc(type: Exec, dependsOn: [initScript]) {
    doFirst {
        // Compute the absolute schema file path depending on where the script is started from.
        String schemaFilePath = "${projectDir}" + (innerBuild.toBoolean() ? "/../schemas/" : "/../../") + schemaFile
        String schemaExtension = schemaFile.lastIndexOf('.').with {it != -1 ? schemaFile[it..<schemaFile.length()] : schemaFile}
        generatedDocFilePath = schemaFilePath.replace(schemaExtension, ".html")
        switch (schemaExtension) {
            case ".xsd":
                scriptToRun = "schemaDocumentation.sh"
                break
            case ".xsl":
                scriptToRun = "stylesheetDocumentation.sh"
                break
            case ".wsdl":
                scriptToRun = "wsdlDocumentation.sh"
                break
            default:
                break
        }
    }

    println "Maybe doFirst."
    workingDir "${projectDir}/extracted/oxygen/scripts"
    commandLine 'chmod', '700', scriptToRun

    doLast {
        println "Script to run: " + scriptToRun
        commandLine scriptToRun, schemaFilePath

        if (execResult.getExitValue() != 0) {
            println new File(generatedDocFilePath).text
            throw new TaskExecutionException(it, new Exception("Generation failed, see task output for details."))
        } else {
                println "POSTPROCESS DOC TASK"
                // Replace file locations from GitHub VM with locations from repository.
                ant.replace(
                        file: generatedDocFilePath,
                        token: 'file:/home/runner/work/oxygen-script-documentation-template/oxygen-script-documentation-template',
                        value:  repoMainBranchUrl
                )
                ant.replace(
                        file: generatedDocFilePath,
                        token: '/home/runner/work',
                        value:  ''
                )
        }
    }
}

task copyDocFile(type: Copy, dependsOn: [generateDoc]) {
        from "${projectDir}/../schemas"
        into "${projectDir}/../doc"
        include '*.html'
        include '*.png'
}

task runGenerator(dependsOn: [generateDoc, copyDocFile])

defaultTasks 'runGenerator'

